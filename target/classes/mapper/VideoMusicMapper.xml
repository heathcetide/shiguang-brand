<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.foodrecord.mapper.VideoMusicMapper">

    <insert id="insertMusicUse">
        INSERT INTO video_music_uses (
            video_id, music_id, start_time, duration, volume, created_at
        ) VALUES (
            #{videoId}, #{musicId}, #{startTime}, #{duration}, #{volume}, NOW()
        )
    </insert>

    <delete id="deleteMusicUse">
        DELETE FROM video_music_uses
        WHERE video_id = #{videoId}
    </delete>

    <update id="incrementUseCount">
        UPDATE video_musics
        SET use_count = use_count + 1,
            updated_at = NOW()
        WHERE id = #{musicId}
    </update>

    <select id="selectMusicList" resultType="java.util.Map">
        SELECT 
            vm.id,
            vm.name,
            vm.artist,
            vm.duration,
            vm.file_url,
            vm.cover_url,
            vm.use_count,
            vm.category,
            vm.created_at
        FROM video_musics vm
        <where>
            <if test="category != null and category != ''">
                AND vm.category = #{category}
            </if>
        </where>
        ORDER BY vm.use_count DESC, vm.created_at DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <select id="countMusic" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM video_musics
        <where>
            <if test="category != null and category != ''">
                AND category = #{category}
            </if>
        </where>
    </select>

    <select id="searchMusic" resultType="java.util.Map">
        SELECT 
            vm.id,
            vm.name,
            vm.artist,
            vm.duration,
            vm.file_url,
            vm.cover_url,
            vm.use_count,
            vm.category
        FROM video_musics vm
        WHERE vm.name LIKE CONCAT('%', #{keyword}, '%')
           OR vm.artist LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY vm.use_count DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <select id="countSearchMusic" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM video_musics
        WHERE name LIKE CONCAT('%', #{keyword}, '%')
           OR artist LIKE CONCAT('%', #{keyword}, '%')
    </select>

    <select id="selectHotMusic" resultType="java.util.Map">
        SELECT 
            vm.id,
            vm.name,
            vm.artist,
            vm.duration,
            vm.file_url,
            vm.cover_url,
            vm.use_count,
            vm.category
        FROM video_musics vm
        ORDER BY vm.use_count DESC, vm.created_at DESC
        LIMIT #{offset}, #{pageSize}
    </select>

</mapper> 