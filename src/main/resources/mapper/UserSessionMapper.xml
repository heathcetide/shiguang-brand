<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.foodrecord.mapper.UserSessionMapper">

    <resultMap id="BaseResultMap" type="com.foodrecord.model.entity.user.UserSession">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="session_token" property="sessionToken"/>
        <result column="refresh_token" property="refreshToken"/>
        <result column="device_id" property="deviceId"/>
        <result column="device_type" property="deviceType"/>
        <result column="ip_address" property="ipAddress"/>
        <result column="user_agent" property="userAgent"/>
        <result column="expires_at" property="expiresAt"/>
        <result column="create_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <sql id="base_column">
        id, user_id, session_token, refresh_token, device_id, device_type, ip_address,
        user_agent, expires_at, create_at, update_at
    </sql>

    <select id="selectLists" resultMap="BaseResultMap">
        SELECT
        <include refid="base_column"/>
        FROM user_sessions
        WHERE update_at IS NOT NULL
        <if test="id != null">
            AND (
                id = #{id}
            )
        </if>
    </select>

    <select id="selectUsers" resultMap="BaseResultMap">
        SELECT * FROM user_sessions
        WHERE deleted = 0
        <if test="keyword != null">
            AND (
            username LIKE CONCAT('%', #{keyword}, '%')
            OR email LIKE CONCAT('%', #{keyword}, '%')
            OR phone LIKE CONCAT('%', #{keyword}, '%')
            OR nickname LIKE CONCAT('%', #{keyword}, '%')
            )
        </if>
        ORDER BY created_at DESC
    </select>

    <delete id="deleteById">
        DELETE FROM user_sessions WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="." close=")">
            #{id}
        </foreach>
    </delete>

    <insert id="insertUser" parameterType="com.foodrecord.model.entity.user.User">
        INSERT INTO users (username, email, phone, password)
        VALUES (#{username}, #{email}, #{phone}, #{password})
    </insert>

    <update id="updateUser" parameterType="com.foodrecord.model.entity.user.User">
        UPDATE users
        SET email = #{email}, phone = #{phone}, password = #{password}
        WHERE id = #{id}
    </update>

    <delete id="deleteUsersByIds">
        DELETE FROM users WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>